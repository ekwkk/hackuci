{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import Image from\"react-native-web/dist/exports/Image\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{KeyboardAwareScrollView}from'react-native-keyboard-aware-scroll-view';import styles from\"./styles\";export default function RegistrationScreen(_ref){var navigation=_ref.navigation;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),fullName=_useState2[0],setFullName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var onFooterLinkPress=function onFooterLinkPress(){navigation.navigate('Login');};var onRegisterPress=function onRegisterPress(){if(password!==confirmPassword){alert(\"Passwords don't match.\");return;}firebase.auth().createUserWithEmailAndPassword(email,password).then(function(response){var uid=response.user.uid;var data={id:uid,email:email,fullName:fullName};var usersRef=firebase.firestore().collection('users');usersRef.doc(uid).set(data).then(function(){navigation.navigate('Home',{user:data});}).catch(function(error){alert(error);});}).catch(function(error){alert(error);});};return React.createElement(View,{style:styles.container},React.createElement(KeyboardAwareScrollView,{style:{flex:1,width:'100%'},keyboardShouldPersistTaps:\"always\"},React.createElement(Image,{style:styles.logo,source:require(\"../../../assets/icon.png\")}),React.createElement(TextInput,{style:styles.input,placeholder:\"Full Name\",placeholderTextColor:\"#aaaaaa\",onChangeText:function onChangeText(text){return setFullName(text);},value:fullName,underlineColorAndroid:\"transparent\",autoCapitalize:\"none\"}),React.createElement(TextInput,{style:styles.input,placeholder:\"E-mail\",placeholderTextColor:\"#aaaaaa\",onChangeText:function onChangeText(text){return setEmail(text);},value:email,underlineColorAndroid:\"transparent\",autoCapitalize:\"none\"}),React.createElement(TextInput,{style:styles.input,placeholderTextColor:\"#aaaaaa\",secureTextEntry:true,placeholder:\"Password\",onChangeText:function onChangeText(text){return setPassword(text);},value:password,underlineColorAndroid:\"transparent\",autoCapitalize:\"none\"}),React.createElement(TextInput,{style:styles.input,placeholderTextColor:\"#aaaaaa\",secureTextEntry:true,placeholder:\"Confirm Password\",onChangeText:function onChangeText(text){return setConfirmPassword(text);},value:confirmPassword,underlineColorAndroid:\"transparent\",autoCapitalize:\"none\"}),React.createElement(TouchableOpacity,{style:styles.button,onPress:function onPress(){return onRegisterPress();}},React.createElement(Text,{style:styles.buttonTitle},\"Create account\")),React.createElement(View,{style:styles.footerView},React.createElement(Text,{style:styles.footerText},\"Already got an account? \",React.createElement(Text,{onPress:onFooterLinkPress,style:styles.footerLink},\"Log in\")))));}","map":{"version":3,"sources":["/Users/ericakong/Desktop/hackuci/src/screens/RegistrationScreen/RegistrationScreen.js"],"names":["React","useState","KeyboardAwareScrollView","styles","RegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","alert","firebase","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","firestore","collection","doc","set","catch","error","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from './styles';\n\nexport default function RegistrationScreen({navigation}) {\n    const [fullName, setFullName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const onFooterLinkPress = () => {\n        navigation.navigate('Login')\n    }\n\n    const onRegisterPress = () => {\n        if (password !== confirmPassword) {\n            alert(\"Passwords don't match.\")\n            return\n        }\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((response) => {\n                const uid = response.user.uid\n                const data = {\n                    id: uid,\n                    email,\n                    fullName,\n                };\n                const usersRef = firebase.firestore().collection('users')\n                usersRef\n                    .doc(uid)\n                    .set(data)\n                    .then(() => {\n                        navigation.navigate('Home', {user: data})\n                    })\n                    .catch((error) => {\n                        alert(error)\n                    });\n            })\n            .catch((error) => {\n                alert(error)\n        });\n    }\n\n    return (\n        <View style={styles.container}>\n            <KeyboardAwareScrollView\n                style={{ flex: 1, width: '100%' }}\n                keyboardShouldPersistTaps=\"always\">\n                <Image\n                    style={styles.logo}\n                    source={require('../../../assets/icon.png')}\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder='Full Name'\n                    placeholderTextColor=\"#aaaaaa\"\n                    onChangeText={(text) => setFullName(text)}\n                    value={fullName}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder='E-mail'\n                    placeholderTextColor=\"#aaaaaa\"\n                    onChangeText={(text) => setEmail(text)}\n                    value={email}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholderTextColor=\"#aaaaaa\"\n                    secureTextEntry\n                    placeholder='Password'\n                    onChangeText={(text) => setPassword(text)}\n                    value={password}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholderTextColor=\"#aaaaaa\"\n                    secureTextEntry\n                    placeholder='Confirm Password'\n                    onChangeText={(text) => setConfirmPassword(text)}\n                    value={confirmPassword}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => onRegisterPress()}>\n                    <Text style={styles.buttonTitle}>Create account</Text>\n                </TouchableOpacity>\n                <View style={styles.footerView}>\n                    <Text style={styles.footerText}>Already got an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Log in</Text></Text>\n                </View>\n            </KeyboardAwareScrollView>\n        </View>\n    )\n}"]},"metadata":{},"sourceType":"module"}